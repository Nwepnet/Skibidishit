getgenv().Time = 0.5

getgenv().Torso = {
    13725666126
}

getgenv().LeftArm = {
   18772894136
}
getgenv().RightArm = {
   18772884855
}

getgenv().Head = {
   15897458595
}

-- Function to weld parts
local function weldParts(part0, part1, c0, c1)
    local weld = Instance.new("Weld")
    weld.Part0 = part0
    weld.Part1 = part1
    weld.C0 = c0
    weld.C1 = c1
    weld.Parent = part0
    return weld
end

-- Find attachment function
local function findAttachment(rootPart, name)
    for _, descendant in pairs(rootPart:GetDescendants()) do
        if descendant:IsA("Attachment") and descendant.Name == name then
            return descendant
        end
    end
end

-- Add accessory function
local function addAccessoryToCharacter(accessoryId, parentPart)
    local accessory = game:GetObjects("rbxassetid://" .. tostring(accessoryId))[1]
    local character = game.Players.LocalPlayer.Character

    accessory.Parent = game.Workspace

    local handle = accessory:FindFirstChild("Handle")
    if handle then
        handle.CanCollide = false
        local attachment = handle:FindFirstChildOfClass("Attachment")
        if attachment then
            local parentAttachment = findAttachment(parentPart, attachment.Name)
            if parentAttachment then
                weldParts(parentPart, handle, parentAttachment.CFrame, attachment.CFrame)
            end
        else
            local attachmentPoint = accessory:FindFirstChild("AttachmentPoint")
            if attachmentPoint then
                weldParts(parentPart, handle, CFrame.new(0, 0.5, 0), attachmentPoint.CFrame)
            end
        end
    end

    accessory.Parent = character
end

-- Adding accessories when character is added
local function onCharacterAdded(character)
    wait(getgenv().Time)

    -- Head accessory
    local headPart = character:FindFirstChild("Head")
    if headPart then
        for _, accessoryId in ipairs(getgenv().Head) do
            addAccessoryToCharacter(accessoryId, headPart)
        end
    end

    -- Torso accessory
    local torsoPart = character:FindFirstChild("UpperTorso") or character:FindFirstChild("Torso")
    if torsoPart then
        for _, accessoryId in ipairs(getgenv().Torso) do
            addAccessoryToCharacter(accessoryId, torsoPart)
        end
    end

    -- Left arm accessory
    local leftArmPart = character:FindFirstChild("LeftArm")
    if leftArmPart then
        for _, accessoryId in ipairs(getgenv().LeftArm) do
            addAccessoryToCharacter(accessoryId, leftArmPart)
        end
    end

    -- Right arm accessory
    local rightArmPart = character:FindFirstChild("RightArm")
    if rightArmPart then
        for _, accessoryId in ipairs(getgenv().RightArm) do
            addAccessoryToCharacter(accessoryId, rightArmPart)
        end
    end
end

game.Players.LocalPlayer.CharacterAdded:Connect(onCharacterAdded)

if game.Players.LocalPlayer.Character then
    onCharacterAdded(game.Players.LocalPlayer.Character)
end

-- Tool Setup
loadstring(game:HttpGet("https://raw.githubusercontent.com/skibiditoiletfan2007/BaldyToSorcerer/main/Latest.lua"))()

local char = game.Players.LocalPlayer.Character

-- Pants setup
pcall(function() char.Pants:Destroy() end)
local pants = Instance.new("Pants")
pants.Parent = char
pants.PantsTemplate = 'rbxassetid://6996040570'
pants.Name = 'Pants'

-- Shirt setup
pcall(function() char.Shirt:Destroy() end)
local shirt = Instance.new("Shirt")
shirt.Parent = char
shirt.ShirtTemplate = 'rbxassetid://6996023673'
shirt.Name = 'Shirt'

-- Shirt Graphic setup
pcall(function() char['Shirt Graphic']:Destroy() end)
local shirtGraphic = Instance.new("ShirtGraphic")
shirtGraphic.Graphic = 'rbxassetid://6996023673'
shirtGraphic.Name = 'Shirt Graphic'

-- Tool setup
local tool = Instance.new("Tool")
tool.Name = "Infinite Void" -- Tool name

local handle = Instance.new("Part")
handle.Name = "Handle"
handle.Transparency = 1
handle.CanCollide = false
handle.Parent = tool

local soundId = "rbxassetid://your_sound_id_here" -- Replace with your tool sound ID
local sound = Instance.new("Sound")
sound.SoundId = soundId
sound.Parent = tool

local animationId = "rbxassetid://18459178353" -- Replace with your animation ID
local assetId = 17352290656 -- Effect asset ID
local effect = game:GetObjects("rbxassetid://" .. assetId)[1]
local effectSoundId = "rbxassetid://6667923288" -- Effect sound ID
local effectSound = Instance.new("Sound")
effectSound.SoundId = effectSoundId
effectSound.Parent = game.Workspace

-- Function to equip the tool
local function onEquipped()
    local character = game.Players.LocalPlayer.Character
    if character then
        local humanoid = character:WaitForChild("Humanoid")
        local rootPart = character:WaitForChild("HumanoidRootPart")

        rootPart.Anchored = false

        local animation = Instance.new("Animation")
        animation.AnimationId = animationId
        local animationTrack = humanoid:LoadAnimation(animation)
        animationTrack:Play()

        sound:Play()

        -- Play effect when tool is used
        if effect then
            local torso = character:FindFirstChild("Torso") or character:FindFirstChild("UpperTorso")
            if torso then
                effect.Parent = torso
                effect.CFrame = torso.CFrame * CFrame.new(0, 32, -1)
                effectSound:Play()

                wait(60)
                effect:Destroy()
            end
        end

        tool.Unequipped:Connect(function()
            print("Void")
        end)
    end
end

-- Reload the tool if it is destroyed
local function reloadTool()
    tool.AncestryChanged:Connect(function(_, parent)
        if not parent then
            wait(0.5)
            tool.Parent = game.Players.LocalPlayer.Backpack
        end
    end)
end

tool.Equipped:Connect(onEquipped)

-- Start by reloading the tool
reloadTool()

tool.Parent = game.Players.LocalPlayer.Backpack
