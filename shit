loadstring(game:HttpGet("https://raw.githubusercontent.com/Nwepnet/Skibidi/refs/heads/main/protectgojo1-1.txt",true))()
-- Right Arm (Cyan color)
local fx7Right = game.ReplicatedStorage.Resources.FiveSeasonsFX["CharFX"].ArmFX:Clone()
fx7Right.Parent = game.Players.LocalPlayer.Character["Right Arm"]
for _, child in ipairs(fx7Right:GetChildren()) do
    if child:IsA("ParticleEmitter") then
        child.Color = ColorSequence.new(Color3.fromRGB(0, 255, 255)) -- Set color to cyan
        child:Emit(1) -- Emit 1 particle
    end
end

task.wait(0.1)

-- Left Arm (Cyan color)
local fx7Left = game.ReplicatedStorage.Resources.FiveSeasonsFX["CharFX"].ArmFX:Clone()
fx7Left.Parent = game.Players.LocalPlayer.Character["Left Arm"]
for _, child in ipairs(fx7Left:GetChildren()) do
    if child:IsA("ParticleEmitter") then
        child.Color = ColorSequence.new(Color3.fromRGB(0, 255, 255)) -- Set color to cyan
        child:Emit(1) -- Emit 1 particle
    end
end
local tool = Instance.new("Tool")
tool.Name = "Infinite Void" --put your tool name here

local handle = Instance.new("Part")
handle.Name = "Handle"
handle.Transparency = 1
handle.CanCollide = false
handle.Parent = tool

local soundId = "rbxassetid://your_sound_id_here" --put a sound here (needs to be a sound by tsb)
local sound = Instance.new("Sound")
sound.SoundId = soundId
sound.Parent = tool

local animationId = "rbxassetid://18459178353" --put your tool anim in here
local assetId = 17352290656 -- Replace with the actual Asset ID for the effect
local effect = game:GetObjects("rbxassetid://" .. assetId)[1]
local effectSoundId = "rbxassetid://6667923288" -- Replace with the actual ID of the sound you want to play for the effect
local effectSound = Instance.new("Sound")
effectSound.SoundId = effectSoundId
effectSound.Parent = game.Workspace

-- Function to equip the tool
local function onEquipped()
    local character = game.Players.LocalPlayer.Character
    if character then
        local humanoid = character:WaitForChild("Humanoid")
        local rootPart = character:WaitForChild("HumanoidRootPart")

        rootPart.Anchored = false -- Set to false if you do not want it to anchor

        local animation = Instance.new("Animation")
        animation.AnimationId = animationId
        local animationTrack = humanoid:LoadAnimation(animation)
        animationTrack:Play() -- Plays the animation
        animationTrack:AdjustSpeed(1) -- Set your desired animation speed

        sound:Play() -- Plays the tool sound

        -- Play effect when tool is used
        if effect then
            local torso = character:FindFirstChild("Torso") or character:FindFirstChild("UpperTorso") -- R6 or R15 model

            if torso then
                effect.Parent = torso -- Attach the effect to the player's torso
                effect.CFrame = torso.CFrame * CFrame.new(0, 32, -1) -- Position the effect
                effectSound:Play() -- Play the effect sound

                wait(60) -- Wait for 60 seconds
                effect:Destroy() -- Destroy the effect
            end
        end

        tool.Unequipped:Connect(function()
            print("Void")
        end)
    end
end

-- Reload the tool if it is destroyed
local function reloadTool()
    -- Wait for the tool to be destroyed or unequipped
    tool.AncestryChanged:Connect(function(_, parent)
        if not parent then
            -- Tool is removed from the player's Backpack (destroyed or unequipped)
            wait(0.5)  -- Delay before reloading (to allow time for destruction)
            tool.Parent = game.Players.LocalPlayer.Backpack -- Reload the tool
        end
    end)
end

tool.Equipped:Connect(onEquipped)

-- Start by reloading the tool
reloadTool()

tool.Parent = game.Players.LocalPlayer.Backpack
getgenv().Time = 0.5

getgenv().Head = {
    8484756013,
    8484756013,
}

getgenv().Torso = {
    8484756013,
    8484758961,
}

local function weldParts(part0, part1, c0, c1)
    local weld = Instance.new("Weld")
    weld.Part0 = part0
    weld.Part1 = part1
    weld.C0 = c0
    weld.C1 = c1
    weld.Parent = part0
    return weld
end

local function findAttachment(rootPart, name)
    for _, descendant in pairs(rootPart:GetDescendants()) do
        if descendant:IsA("Attachment") and descendant.Name == name then
            return descendant
        end
    end
end

local function addAccessoryToCharacter(accessoryId, parentPart)
    local accessory = game:GetObjects("rbxassetid://" .. tostring(accessoryId))[1]
    local character = game.Players.LocalPlayer.Character

    accessory.Parent = game.Workspace

    local handle = accessory:FindFirstChild("Handle")
    if handle then
        handle.CanCollide = false
        local attachment = handle:FindFirstChildOfClass("Attachment")
        if attachment then
            local parentAttachment = findAttachment(parentPart, attachment.Name)
            if parentAttachment then
                weldParts(parentPart, handle, parentAttachment.CFrame, attachment.CFrame)
            end
        else
            local parent = character:FindFirstChild(parentPart.Name)
            if parent then
                local attachmentPoint = accessory.AttachmentPoint
                weldParts(parent, handle, CFrame.new(0, 0.5, 0), attachmentPoint.CFrame)
            end
        end
    end

    accessory.Parent = game.Players.LocalPlayer.Character
end

local function onCharacterAdded(character)
    wait(getgenv().Time)

    for _, accessoryId in ipairs(getgenv().Head) do
        addAccessoryToCharacter(accessoryId, character.Head)
    end

    for _, accessoryId in ipairs(getgenv().Torso) do
        addAccessoryToCharacter(accessoryId, character:FindFirstChild("UpperTorso") or character:FindFirstChild("Torso"))
    end
end

game.Players.LocalPlayer.CharacterAdded:Connect(onCharacterAdded)

if game.Players.LocalPlayer.Character then
    onCharacterAdded(game.Players.LocalPlayer.Character)
end
